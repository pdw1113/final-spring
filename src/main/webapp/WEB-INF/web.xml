<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- 
		* web.xml
		
		Tomcat(WAS) 실행 시 web.xml을 제일 먼저 읽게 된다.
		- 서버 실행 시 초기에 읽어야 할 설정 xml문서들을 읽도록 web.xml에 등록
		- 서블릿 실행 이전에 서블릿 초기화하는 용도로 사용
	 -->

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<!-- 
		* contextConfigLocation
		 설정 xml 문서들 로딩 시 설정 xml문서의 경로를 작성하기 위한 param-name/value
		 
		 Spring MVC는 web.xml - dispatcher.xml 로부터 1개 이상의 스프링 설정 정보를 읽어들일수 있다. 
		  이때 한개만으로 충분한 경우 dispatcher 에 지정하면 되지만 2개 이상이면 너무 복잡해지므로 contextConfigLocation 초기화 파라미터에 설정파일 목록을 지정하면 된다.
	 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>/WEB-INF/spring/root-context.xml</param-value> -->
		<!-- root-context.xml을 소스폴더 최상위 패스("src/main/resources" => classpath) -->
		<param-value>
			classpath:root-context.xml
			classpath:spring-security.xml
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported> <!-- 웹소켓을 위한 설정(비동기지원) -->
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- 공용 에러페이지 등록 -->
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/WEB-INF/views/common/errorPage.jsp</location>
	</error-page>
	
	<!-- 한글 깨짐 방지 -->
	<!-- 
		filter : 필터는 웹 애플리케이션 전반에 걸쳐 특정 URL이나 파일 요청 시
		먼저 로딩되어 사전에 처리할 작업을 수행(필터링)하고 해당 요청을 처리하는 자바 웹 애플리케이션 유형 중 하나이다. 
	-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<!-- 
		<filter-mapping> 에서는 해당 필터를 적용할 URL패턴이나 Servlet 등을 등록한다. 
		스프링 시큐리티 예제를 만들어보면서도 시큐리티 관련 filter를 등록해야 한다. 
	-->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<welcome-file-list>
    	<welcome-file>/WEB-INF/views/index.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>
